   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"timer.c"
  21              	.Ltext0:
  22              		.file 1 "../timer.c"
 1880              		.align	2
 1883              	switch_leds:
 1884 0000 00000000 		.space	4
 1885              		.text
 1886              		.align	2
 1887              		.global	timer_ISR
 1889              	timer_ISR:
 1890              	.LFB0:
   1:../timer.c    **** /*********************************************************************************************
   2:../timer.c    **** * Fichero:		timer.c
   3:../timer.c    **** * Autor:
   4:../timer.c    **** * Descrip:		funciones de control del timer0 del s3c44b0x
   5:../timer.c    **** * Version:
   6:../timer.c    **** *********************************************************************************************/
   7:../timer.c    **** 
   8:../timer.c    **** /*--- ficheros de cabecera ---*/
   9:../timer.c    **** #include "timer.h"
  10:../timer.c    **** #include "44b.h"
  11:../timer.c    **** #include "44blib.h"
  12:../timer.c    **** 
  13:../timer.c    **** /*--- variables globales ---*/
  14:../timer.c    **** int switch_leds = 0;
  15:../timer.c    **** 
  16:../timer.c    **** /* declaración de función que es rutina de servicio de interrupción
  17:../timer.c    ****  * https://gcc.gnu.org/onlinedocs/gcc/ARM-Function-Attributes.html */
  18:../timer.c    **** void timer_ISR(void) __attribute__((interrupt("IRQ")));
  19:../timer.c    **** 
  20:../timer.c    **** /*--- codigo de las funciones ---*/
  21:../timer.c    **** void timer_ISR(void)
  22:../timer.c    **** {
 1891              		.loc 1 22 0
 1892              		.cfi_startproc
 1893              		@ Interrupt Service Routine.
 1894              		@ args = 0, pretend = 0, frame = 0
 1895              		@ frame_needed = 1, uses_anonymous_args = 0
 1896 0000 04C02DE5 		str	ip, [sp, #-4]!
 1897 0004 0DC0A0E1 		mov	ip, sp
 1898              	.LCFI0:
 1899              		.cfi_def_cfa_register 12
 1900 0008 0CD82DE9 		stmfd	sp!, {r2, r3, fp, ip, lr, pc}
 1901 000c 04B04CE2 		sub	fp, ip, #4
 1902              		.cfi_offset 14, -8
 1903              		.cfi_offset 13, -12
 1904              		.cfi_offset 11, -16
 1905              		.cfi_offset 3, -20
 1906              		.cfi_offset 2, -24
 1907              	.LCFI1:
 1908              		.cfi_def_cfa 11, 4
  23:../timer.c    **** 	switch_leds = 1;
 1909              		.loc 1 23 0
 1910 0010 28309FE5 		ldr	r3, .L2
 1911 0014 0120A0E3 		mov	r2, #1
 1912 0018 002083E5 		str	r2, [r3, #0]
  24:../timer.c    **** 
  25:../timer.c    **** 	/* borrar bit en I_ISPC para desactivar la solicitud de interrupción*/
  26:../timer.c    **** 	rI_ISPC |= BIT_TIMER0; // BIT_TIMER0 está definido en 44b.h y pone un uno en el bit 13 que correpo
 1913              		.loc 1 26 0
 1914 001c 20309FE5 		ldr	r3, .L2+4
 1915 0020 1C209FE5 		ldr	r2, .L2+4
 1916 0024 002092E5 		ldr	r2, [r2, #0]
 1917 0028 022A82E3 		orr	r2, r2, #8192
 1918 002c 002083E5 		str	r2, [r3, #0]
  27:../timer.c    **** }
 1919              		.loc 1 27 0
 1920 0030 14D04BE2 		sub	sp, fp, #20
 1921 0034 0C689DE8 		ldmfd	sp, {r2, r3, fp, sp, lr}
 1922 0038 04C09DE4 		ldmfd	sp!, {ip}
 1923 003c 04F05EE2 		subs	pc, lr, #4
 1924              	.L3:
 1925              		.align	2
 1926              	.L2:
 1927 0040 00000000 		.word	switch_leds
 1928 0044 2400E001 		.word	31457316
 1929              		.cfi_endproc
 1930              	.LFE0:
 1932              		.align	2
 1933              		.global	timer_init
 1935              	timer_init:
 1936              	.LFB1:
  28:../timer.c    **** 
  29:../timer.c    **** void timer_init(void)
  30:../timer.c    **** {
 1937              		.loc 1 30 0
 1938              		.cfi_startproc
 1939              		@ Function supports interworking.
 1940              		@ args = 0, pretend = 0, frame = 0
 1941              		@ frame_needed = 1, uses_anonymous_args = 0
 1942 0048 0DC0A0E1 		mov	ip, sp
 1943              	.LCFI2:
 1944              		.cfi_def_cfa_register 12
 1945 004c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1946 0050 04B04CE2 		sub	fp, ip, #4
 1947              		.cfi_offset 14, -8
 1948              		.cfi_offset 13, -12
 1949              		.cfi_offset 11, -16
 1950              	.LCFI3:
 1951              		.cfi_def_cfa 11, 4
  31:../timer.c    **** 	/* Configuraion controlador de interrupciones */
  32:../timer.c    **** 	rINTMOD = 0x0; // Configura las linas como de tipo IRQ
 1952              		.loc 1 32 0
 1953 0054 84309FE5 		ldr	r3, .L5
 1954 0058 0020A0E3 		mov	r2, #0
 1955 005c 002083E5 		str	r2, [r3, #0]
  33:../timer.c    **** 	rINTCON = 0x1; // Habilita int. vectorizadas y la linea IRQ (FIQ no)
 1956              		.loc 1 33 0
 1957 0060 1E36A0E3 		mov	r3, #31457280
 1958 0064 0120A0E3 		mov	r2, #1
 1959 0068 002083E5 		str	r2, [r3, #0]
  34:../timer.c    **** 	rINTMSK &= ~(BIT_TIMER0); // habilitamos en vector de mascaras de interrupcion el Timer0 (bits 26 
 1960              		.loc 1 34 0
 1961 006c 70309FE5 		ldr	r3, .L5+4
 1962 0070 6C209FE5 		ldr	r2, .L5+4
 1963 0074 002092E5 		ldr	r2, [r2, #0]
 1964 0078 022AC2E3 		bic	r2, r2, #8192
 1965 007c 002083E5 		str	r2, [r3, #0]
  35:../timer.c    **** 
  36:../timer.c    **** 	/* Establece la rutina de servicio para TIMER0 */
  37:../timer.c    **** 	pISR_TIMER0 = (unsigned) timer_ISR;
 1966              		.loc 1 37 0
 1967 0080 60309FE5 		ldr	r3, .L5+8
 1968 0084 60209FE5 		ldr	r2, .L5+12
 1969 0088 002083E5 		str	r2, [r3, #0]
  38:../timer.c    **** 
  39:../timer.c    **** 	/* Configura el Timer0 */
  40:../timer.c    **** 	rTCFG0 = 255; // ajusta el preescalado
 1970              		.loc 1 40 0
 1971 008c 5C309FE5 		ldr	r3, .L5+16
 1972 0090 FF20A0E3 		mov	r2, #255
 1973 0094 002083E5 		str	r2, [r3, #0]
  41:../timer.c    **** 	rTCFG1 = 0x0; // selecciona la entrada del mux que proporciona el reloj. La 00 corresponde a un di
 1974              		.loc 1 41 0
 1975 0098 54309FE5 		ldr	r3, .L5+20
 1976 009c 0020A0E3 		mov	r2, #0
 1977 00a0 002083E5 		str	r2, [r3, #0]
  42:../timer.c    **** 	rTCNTB0 = 65535;// valor inicial de cuenta (la cuenta es descendente)
 1978              		.loc 1 42 0
 1979 00a4 4C309FE5 		ldr	r3, .L5+24
 1980 00a8 4C209FE5 		ldr	r2, .L5+28
 1981 00ac 002083E5 		str	r2, [r3, #0]
  43:../timer.c    **** 	rTCMPB0 = 12800;// valor de comparación
 1982              		.loc 1 43 0
 1983 00b0 48309FE5 		ldr	r3, .L5+32
 1984 00b4 322CA0E3 		mov	r2, #12800
 1985 00b8 002083E5 		str	r2, [r3, #0]
  44:../timer.c    **** 	/* establecer update=manual (bit 1) + inverter=on (¿? será inverter off un cero en el bit 2 pone e
  45:../timer.c    **** 	rTCON = 0x2;
 1986              		.loc 1 45 0
 1987 00bc 40309FE5 		ldr	r3, .L5+36
 1988 00c0 0220A0E3 		mov	r2, #2
 1989 00c4 002083E5 		str	r2, [r3, #0]
  46:../timer.c    **** 	/* iniciar timer (bit 0) con auto-reload (bit 3)*/
  47:../timer.c    **** 	rTCON = 0x09;
 1990              		.loc 1 47 0
 1991 00c8 34309FE5 		ldr	r3, .L5+36
 1992 00cc 0920A0E3 		mov	r2, #9
 1993 00d0 002083E5 		str	r2, [r3, #0]
  48:../timer.c    **** }
 1994              		.loc 1 48 0
 1995 00d4 0CD04BE2 		sub	sp, fp, #12
 1996 00d8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1997 00dc 1EFF2FE1 		bx	lr
 1998              	.L6:
 1999              		.align	2
 2000              	.L5:
 2001 00e0 0800E001 		.word	31457288
 2002 00e4 0C00E001 		.word	31457292
 2003 00e8 54FF7F0C 		.word	209715028
 2004 00ec 00000000 		.word	timer_ISR
 2005 00f0 0000D501 		.word	30736384
 2006 00f4 0400D501 		.word	30736388
 2007 00f8 0C00D501 		.word	30736396
 2008 00fc FFFF0000 		.word	65535
 2009 0100 1000D501 		.word	30736400
 2010 0104 0800D501 		.word	30736392
 2011              		.cfi_endproc
 2012              	.LFE1:
 2014              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
C:\Users\Ivo\AppData\Local\Temp\ccf7eU1Q.s:1883   .bss:00000000 switch_leds
C:\Users\Ivo\AppData\Local\Temp\ccf7eU1Q.s:1880   .bss:00000000 $d
C:\Users\Ivo\AppData\Local\Temp\ccf7eU1Q.s:1886   .text:00000000 $a
C:\Users\Ivo\AppData\Local\Temp\ccf7eU1Q.s:1889   .text:00000000 timer_ISR
C:\Users\Ivo\AppData\Local\Temp\ccf7eU1Q.s:1927   .text:00000040 $d
C:\Users\Ivo\AppData\Local\Temp\ccf7eU1Q.s:1932   .text:00000048 $a
C:\Users\Ivo\AppData\Local\Temp\ccf7eU1Q.s:1935   .text:00000048 timer_init
C:\Users\Ivo\AppData\Local\Temp\ccf7eU1Q.s:2001   .text:000000e0 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
